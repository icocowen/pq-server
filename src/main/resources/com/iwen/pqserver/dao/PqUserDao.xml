<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwen.pqserver.dao.PqUserDao">
  <resultMap id="BaseResultMap" type="com.iwen.pqserver.entity.PqUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="groups" jdbcType="VARCHAR" property="groups" />
    <result column="friends" jdbcType="VARCHAR" property="friends" />
    <result column="last_friends_update_time" jdbcType="TIMESTAMP" property="lastFriendsUpdateTime" />
    <result column="last_groups_update_time" jdbcType="TIMESTAMP" property="lastGroupsUpdateTime" />
    <result column="user_info_id" jdbcType="INTEGER" property="userInfoId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, email, `password`, last_login, groups, friends, last_friends_update_time, last_groups_update_time, 
    user_info_id
  </sql>
  <select id="selectByExample" parameterType="com.iwen.pqserver.entity.PqUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pq_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pq_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pq_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.iwen.pqserver.entity.PqUserExample">
    delete from pq_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.iwen.pqserver.entity.PqUser" useGeneratedKeys="true">
    insert into pq_user (email, `password`, last_login, 
      groups, friends, last_friends_update_time, 
      last_groups_update_time, user_info_id)
    values (#{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP}, 
      #{groups,jdbcType=VARCHAR}, #{friends,jdbcType=VARCHAR}, #{lastFriendsUpdateTime,jdbcType=TIMESTAMP}, 
      #{lastGroupsUpdateTime,jdbcType=TIMESTAMP}, #{userInfoId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.iwen.pqserver.entity.PqUser" useGeneratedKeys="true">
    insert into pq_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="groups != null">
        groups,
      </if>
      <if test="friends != null">
        friends,
      </if>
      <if test="lastFriendsUpdateTime != null">
        last_friends_update_time,
      </if>
      <if test="lastGroupsUpdateTime != null">
        last_groups_update_time,
      </if>
      <if test="userInfoId != null">
        user_info_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="groups != null">
        #{groups,jdbcType=VARCHAR},
      </if>
      <if test="friends != null">
        #{friends,jdbcType=VARCHAR},
      </if>
      <if test="lastFriendsUpdateTime != null">
        #{lastFriendsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastGroupsUpdateTime != null">
        #{lastGroupsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userInfoId != null">
        #{userInfoId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iwen.pqserver.entity.PqUserExample" resultType="java.lang.Long">
    select count(*) from pq_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pq_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLogin != null">
        last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.groups != null">
        groups = #{record.groups,jdbcType=VARCHAR},
      </if>
      <if test="record.friends != null">
        friends = #{record.friends,jdbcType=VARCHAR},
      </if>
      <if test="record.lastFriendsUpdateTime != null">
        last_friends_update_time = #{record.lastFriendsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastGroupsUpdateTime != null">
        last_groups_update_time = #{record.lastGroupsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userInfoId != null">
        user_info_id = #{record.userInfoId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pq_user
    set id = #{record.id,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      groups = #{record.groups,jdbcType=VARCHAR},
      friends = #{record.friends,jdbcType=VARCHAR},
      last_friends_update_time = #{record.lastFriendsUpdateTime,jdbcType=TIMESTAMP},
      last_groups_update_time = #{record.lastGroupsUpdateTime,jdbcType=TIMESTAMP},
      user_info_id = #{record.userInfoId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iwen.pqserver.entity.PqUser">
    update pq_user
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="groups != null">
        groups = #{groups,jdbcType=VARCHAR},
      </if>
      <if test="friends != null">
        friends = #{friends,jdbcType=VARCHAR},
      </if>
      <if test="lastFriendsUpdateTime != null">
        last_friends_update_time = #{lastFriendsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastGroupsUpdateTime != null">
        last_groups_update_time = #{lastGroupsUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userInfoId != null">
        user_info_id = #{userInfoId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iwen.pqserver.entity.PqUser">
    update pq_user
    set email = #{email,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      groups = #{groups,jdbcType=VARCHAR},
      friends = #{friends,jdbcType=VARCHAR},
      last_friends_update_time = #{lastFriendsUpdateTime,jdbcType=TIMESTAMP},
      last_groups_update_time = #{lastGroupsUpdateTime,jdbcType=TIMESTAMP},
      user_info_id = #{userInfoId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>